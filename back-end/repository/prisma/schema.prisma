// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum JobStatus {
  Open
  Closed
  Pending
}

enum ApplicationStatus {
  Applied
  Pending
  Interviewing
  Rejected
  Accepted
}

model Job {
  id             Int        @id @default(autoincrement())
  companyName    String
  jobTitle       String
  date           DateTime
  status         JobStatus
  description    String?
  adminId        Int        // Foreign key field
  admin          Admin      @relation(fields: [adminId], references: [id])  // Inverse relation
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  jobSkills      JobSkill[]
  applications    Application[]
}

model Application {
  id             Int                @id @default(autoincrement())
  job            Job                @relation(fields: [jobId], references: [id])
  jobId          Int
  applicantName  String
  applicantEmail String             @unique
  resumeUrl      String
  coverLetterUrl String
  appliedAt      DateTime           @default(now())
  status         ApplicationStatus  @default(Applied)
  notes          String?
  reminders      Reminder[]
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt
}

model Reminder {
  id             Int          @id @default(autoincrement())
  application     Application @relation(fields: [applicationId], references: [id])
  applicationId   Int
  reminderDate    DateTime
  message         String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

model Skill {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  jobSkills JobSkill[] // Relation field
}

model JobSkill {
  jobId    Int
  skillId  Int
  job      Job    @relation(fields: [jobId], references: [id])
  skill    Skill  @relation(fields: [skillId], references: [id])

  @@id([jobId, skillId])
}

model Admin {
  id      Int     @id @default(autoincrement())
  name    String
  jobs    Job[]
}